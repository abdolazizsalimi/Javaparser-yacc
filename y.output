Terminals unused in grammar

    FOR


Grammar

    0 $accept: Program $end

    1 Program: MainClass ClassDeclList

    2 ClassDeclList: ClassDeclList ClassDecl
    3              | %empty

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    5 ClassDecl: CLASS id '{' VarDeclList MethodDeclList '}'
    6          | CLASS id EXTENDS id '{' VarDeclList MethodDeclList '}'

    7 VarDeclList: VarDeclList VarDecl
    8            | %empty

    9 VarDecl: VDType id ';'
   10        | id id ';'

   11 VDType: VDTypePrime
   12       | VDType '[' ']'
   13       | id '[' ']'

   14 VDTypePrime: INT
   15            | BOOLEAN

   16 MethodDeclList: MethodDeclList MethodDecl
   17               | %empty

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type id '(' FormalList ')' '{' VarDeclList RETURN Exp ';' '}'

   20 FormalList: Type id FormalRestList
   21           | %empty

   22 FormalRestList: FormalRestList FormalRest
   23               | %empty

   24 FormalRest: ',' Type id

   25 Type: PrimeType
   26     | Type '[' ']'

   27 PrimeType: INT
   28          | BOOLEAN
   29          | id

   30 StatementList: StatementList Statement
   31              | Statement

   32 Statement: '{' StatementList '}'
   33          | '{' '}'
   34          | IF '(' Exp ')' Statement ELSE Statement
   35          | WHILE '(' Exp ')' Statement
   36          | PRINT '(' Exp ')' ';'
   37          | PRINT '(' STRING_LITERAL ')' ';'
   38          | id '=' Exp ';'
   39          | id Index '=' Exp ';'

   40 Index: '[' Exp ']'
   41      | Index '[' Exp ']'

   42 Exp: Exp op PrefixExp
   43    | Exp '<' PrefixExp
   44    | Exp '>' PrefixExp
   45    | Exp '+' PrefixExp
   46    | Exp '-' PrefixExp
   47    | Exp '*' PrefixExp
   48    | Exp '/' PrefixExp
   49    | PrefixExp

   50 PrefixExp: '!' PrimaryExp
   51          | '-' PrimaryExp
   52          | '+' PrimaryExp
   53          | PrimaryExp

   54 PrimaryExp: INTEGER_LITERAL
   55           | TRUE
   56           | FALSE
   57           | Object
   58           | '(' Exp ')'
   59           | id '.' LENGTH
   60           | id Index '.' LENGTH
   61           | id '.' id '(' ExpList ')'
   62           | ObjectPrime '.' id '(' ExpList ')'

   63 Object: id
   64       | THIS
   65       | NEW id '(' ')'
   66       | NEW PrimeType Index

   67 ObjectPrime: THIS
   68            | NEW id '(' ')'
   69            | NEW PrimeType Index

   70 ExpList: Exp ExpRestList

   71 ExpRestList: ExpRestList ExpRest
   72            | %empty

   73 ExpRest: ',' Exp


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 50
    '(' (40) 4 18 19 34 35 36 37 58 61 62 65 68
    ')' (41) 4 18 19 34 35 36 37 58 61 62 65 68
    '*' (42) 47
    '+' (43) 45 52
    ',' (44) 24 73
    '-' (45) 46 51
    '.' (46) 59 60 61 62
    '/' (47) 48
    ';' (59) 9 10 18 19 36 37 38 39
    '<' (60) 43
    '=' (61) 38 39
    '>' (62) 44
    '[' (91) 4 12 13 26 40 41
    ']' (93) 4 12 13 26 40 41
    '{' (123) 4 5 6 18 19 32 33
    '}' (125) 4 5 6 18 19 32 33
    error (256)
    id (258) 4 5 6 9 10 13 18 19 20 24 29 38 39 59 60 61 62 63 65 68
    STRING_LITERAL (259) 37
    INTEGER_LITERAL (260) 54
    op (261) 42
    FOR (262)
    CLASS (263) 4 5 6
    PUBLIC (264) 4 18 19
    STATIC (265) 4
    VOID (266) 4
    MAIN (267) 4
    STRING (268) 4
    EXTENDS (269) 6
    RETURN (270) 18 19
    INT (271) 14 27
    BOOLEAN (272) 15 28
    IF (273) 34
    ELSE (274) 34
    WHILE (275) 35
    PRINT (276) 36 37
    LENGTH (277) 59 60
    TRUE (278) 55
    FALSE (279) 56
    THIS (280) 64 67
    NEW (281) 65 66 68 69


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    Program (45)
        on left: 1
        on right: 0
    ClassDeclList (46)
        on left: 2 3
        on right: 1 2
    MainClass (47)
        on left: 4
        on right: 1
    ClassDecl (48)
        on left: 5 6
        on right: 2
    VarDeclList (49)
        on left: 7 8
        on right: 5 6 7 18 19
    VarDecl (50)
        on left: 9 10
        on right: 7
    VDType (51)
        on left: 11 12 13
        on right: 9 12
    VDTypePrime (52)
        on left: 14 15
        on right: 11
    MethodDeclList (53)
        on left: 16 17
        on right: 5 6 16
    MethodDecl (54)
        on left: 18 19
        on right: 16
    FormalList (55)
        on left: 20 21
        on right: 18 19
    FormalRestList (56)
        on left: 22 23
        on right: 20 22
    FormalRest (57)
        on left: 24
        on right: 22
    Type (58)
        on left: 25 26
        on right: 18 19 20 24 26
    PrimeType (59)
        on left: 27 28 29
        on right: 25 66 69
    StatementList (60)
        on left: 30 31
        on right: 18 30 32
    Statement (61)
        on left: 32 33 34 35 36 37 38 39
        on right: 4 30 31 34 35
    Index (62)
        on left: 40 41
        on right: 39 41 60 66 69
    Exp (63)
        on left: 42 43 44 45 46 47 48 49
        on right: 18 19 34 35 36 38 39 40 41 42 43 44 45 46 47 48 58 70 73
    PrefixExp (64)
        on left: 50 51 52 53
        on right: 42 43 44 45 46 47 48 49
    PrimaryExp (65)
        on left: 54 55 56 57 58 59 60 61 62
        on right: 50 51 52 53
    Object (66)
        on left: 63 64 65 66
        on right: 57
    ObjectPrime (67)
        on left: 67 68 69
        on right: 62
    ExpList (68)
        on left: 70
        on right: 61 62
    ExpRestList (69)
        on left: 71 72
        on right: 70 71
    ExpRest (70)
        on left: 73
        on right: 71


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    4 MainClass: CLASS . id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    id  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: MainClass . ClassDeclList

    $default  reduce using rule 3 (ClassDeclList)

    ClassDeclList  go to state 6


State 4

    4 MainClass: CLASS id . '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    '{'  shift, and go to state 7


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    1 Program: MainClass ClassDeclList .
    2 ClassDeclList: ClassDeclList . ClassDecl

    CLASS  shift, and go to state 8

    $default  reduce using rule 1 (Program)

    ClassDecl  go to state 9


State 7

    4 MainClass: CLASS id '{' . PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    PUBLIC  shift, and go to state 10


State 8

    5 ClassDecl: CLASS . id '{' VarDeclList MethodDeclList '}'
    6          | CLASS . id EXTENDS id '{' VarDeclList MethodDeclList '}'

    id  shift, and go to state 11


State 9

    2 ClassDeclList: ClassDeclList ClassDecl .

    $default  reduce using rule 2 (ClassDeclList)


State 10

    4 MainClass: CLASS id '{' PUBLIC . STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    STATIC  shift, and go to state 12


State 11

    5 ClassDecl: CLASS id . '{' VarDeclList MethodDeclList '}'
    6          | CLASS id . EXTENDS id '{' VarDeclList MethodDeclList '}'

    EXTENDS  shift, and go to state 13
    '{'      shift, and go to state 14


State 12

    4 MainClass: CLASS id '{' PUBLIC STATIC . VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    VOID  shift, and go to state 15


State 13

    6 ClassDecl: CLASS id EXTENDS . id '{' VarDeclList MethodDeclList '}'

    id  shift, and go to state 16


State 14

    5 ClassDecl: CLASS id '{' . VarDeclList MethodDeclList '}'

    $default  reduce using rule 8 (VarDeclList)

    VarDeclList  go to state 17


State 15

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID . MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    MAIN  shift, and go to state 18


State 16

    6 ClassDecl: CLASS id EXTENDS id . '{' VarDeclList MethodDeclList '}'

    '{'  shift, and go to state 19


State 17

    5 ClassDecl: CLASS id '{' VarDeclList . MethodDeclList '}'
    7 VarDeclList: VarDeclList . VarDecl

    id       shift, and go to state 20
    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22

    $default  reduce using rule 17 (MethodDeclList)

    VarDecl         go to state 23
    VDType          go to state 24
    VDTypePrime     go to state 25
    MethodDeclList  go to state 26


State 18

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN . '(' STRING '[' ']' id ')' '{' Statement '}' '}'

    '('  shift, and go to state 27


State 19

    6 ClassDecl: CLASS id EXTENDS id '{' . VarDeclList MethodDeclList '}'

    $default  reduce using rule 8 (VarDeclList)

    VarDeclList  go to state 28


State 20

   10 VarDecl: id . id ';'
   13 VDType: id . '[' ']'

    id   shift, and go to state 29
    '['  shift, and go to state 30


State 21

   14 VDTypePrime: INT .

    $default  reduce using rule 14 (VDTypePrime)


State 22

   15 VDTypePrime: BOOLEAN .

    $default  reduce using rule 15 (VDTypePrime)


State 23

    7 VarDeclList: VarDeclList VarDecl .

    $default  reduce using rule 7 (VarDeclList)


State 24

    9 VarDecl: VDType . id ';'
   12 VDType: VDType . '[' ']'

    id   shift, and go to state 31
    '['  shift, and go to state 32


State 25

   11 VDType: VDTypePrime .

    $default  reduce using rule 11 (VDType)


State 26

    5 ClassDecl: CLASS id '{' VarDeclList MethodDeclList . '}'
   16 MethodDeclList: MethodDeclList . MethodDecl

    PUBLIC  shift, and go to state 33
    '}'     shift, and go to state 34

    MethodDecl  go to state 35


State 27

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' . STRING '[' ']' id ')' '{' Statement '}' '}'

    STRING  shift, and go to state 36


State 28

    6 ClassDecl: CLASS id EXTENDS id '{' VarDeclList . MethodDeclList '}'
    7 VarDeclList: VarDeclList . VarDecl

    id       shift, and go to state 20
    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22

    $default  reduce using rule 17 (MethodDeclList)

    VarDecl         go to state 23
    VDType          go to state 24
    VDTypePrime     go to state 25
    MethodDeclList  go to state 37


State 29

   10 VarDecl: id id . ';'

    ';'  shift, and go to state 38


State 30

   13 VDType: id '[' . ']'

    ']'  shift, and go to state 39


State 31

    9 VarDecl: VDType id . ';'

    ';'  shift, and go to state 40


State 32

   12 VDType: VDType '[' . ']'

    ']'  shift, and go to state 41


State 33

   18 MethodDecl: PUBLIC . Type id '(' FormalList ')' '{' VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC . Type id '(' FormalList ')' '{' VarDeclList RETURN Exp ';' '}'

    id       shift, and go to state 42
    INT      shift, and go to state 43
    BOOLEAN  shift, and go to state 44

    Type       go to state 45
    PrimeType  go to state 46


State 34

    5 ClassDecl: CLASS id '{' VarDeclList MethodDeclList '}' .

    $default  reduce using rule 5 (ClassDecl)


State 35

   16 MethodDeclList: MethodDeclList MethodDecl .

    $default  reduce using rule 16 (MethodDeclList)


State 36

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING . '[' ']' id ')' '{' Statement '}' '}'

    '['  shift, and go to state 47


State 37

    6 ClassDecl: CLASS id EXTENDS id '{' VarDeclList MethodDeclList . '}'
   16 MethodDeclList: MethodDeclList . MethodDecl

    PUBLIC  shift, and go to state 33
    '}'     shift, and go to state 48

    MethodDecl  go to state 35


State 38

   10 VarDecl: id id ';' .

    $default  reduce using rule 10 (VarDecl)


State 39

   13 VDType: id '[' ']' .

    $default  reduce using rule 13 (VDType)


State 40

    9 VarDecl: VDType id ';' .

    $default  reduce using rule 9 (VarDecl)


State 41

   12 VDType: VDType '[' ']' .

    $default  reduce using rule 12 (VDType)


State 42

   29 PrimeType: id .

    $default  reduce using rule 29 (PrimeType)


State 43

   27 PrimeType: INT .

    $default  reduce using rule 27 (PrimeType)


State 44

   28 PrimeType: BOOLEAN .

    $default  reduce using rule 28 (PrimeType)


State 45

   18 MethodDecl: PUBLIC Type . id '(' FormalList ')' '{' VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type . id '(' FormalList ')' '{' VarDeclList RETURN Exp ';' '}'
   26 Type: Type . '[' ']'

    id   shift, and go to state 49
    '['  shift, and go to state 50


State 46

   25 Type: PrimeType .

    $default  reduce using rule 25 (Type)


State 47

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' . ']' id ')' '{' Statement '}' '}'

    ']'  shift, and go to state 51


State 48

    6 ClassDecl: CLASS id EXTENDS id '{' VarDeclList MethodDeclList '}' .

    $default  reduce using rule 6 (ClassDecl)


State 49

   18 MethodDecl: PUBLIC Type id . '(' FormalList ')' '{' VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type id . '(' FormalList ')' '{' VarDeclList RETURN Exp ';' '}'

    '('  shift, and go to state 52


State 50

   26 Type: Type '[' . ']'

    ']'  shift, and go to state 53


State 51

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' . id ')' '{' Statement '}' '}'

    id  shift, and go to state 54


State 52

   18 MethodDecl: PUBLIC Type id '(' . FormalList ')' '{' VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type id '(' . FormalList ')' '{' VarDeclList RETURN Exp ';' '}'

    id       shift, and go to state 42
    INT      shift, and go to state 43
    BOOLEAN  shift, and go to state 44

    $default  reduce using rule 21 (FormalList)

    FormalList  go to state 55
    Type        go to state 56
    PrimeType   go to state 46


State 53

   26 Type: Type '[' ']' .

    $default  reduce using rule 26 (Type)


State 54

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id . ')' '{' Statement '}' '}'

    ')'  shift, and go to state 57


State 55

   18 MethodDecl: PUBLIC Type id '(' FormalList . ')' '{' VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type id '(' FormalList . ')' '{' VarDeclList RETURN Exp ';' '}'

    ')'  shift, and go to state 58


State 56

   20 FormalList: Type . id FormalRestList
   26 Type: Type . '[' ']'

    id   shift, and go to state 59
    '['  shift, and go to state 50


State 57

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' . '{' Statement '}' '}'

    '{'  shift, and go to state 60


State 58

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' . '{' VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type id '(' FormalList ')' . '{' VarDeclList RETURN Exp ';' '}'

    '{'  shift, and go to state 61


State 59

   20 FormalList: Type id . FormalRestList

    $default  reduce using rule 23 (FormalRestList)

    FormalRestList  go to state 62


State 60

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' . Statement '}' '}'

    id     shift, and go to state 63
    IF     shift, and go to state 64
    WHILE  shift, and go to state 65
    PRINT  shift, and go to state 66
    '{'    shift, and go to state 67

    Statement  go to state 68


State 61

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' . VarDeclList StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type id '(' FormalList ')' '{' . VarDeclList RETURN Exp ';' '}'

    $default  reduce using rule 8 (VarDeclList)

    VarDeclList  go to state 69


State 62

   20 FormalList: Type id FormalRestList .
   22 FormalRestList: FormalRestList . FormalRest

    ','  shift, and go to state 70

    $default  reduce using rule 20 (FormalList)

    FormalRest  go to state 71


State 63

   38 Statement: id . '=' Exp ';'
   39          | id . Index '=' Exp ';'

    '['  shift, and go to state 72
    '='  shift, and go to state 73

    Index  go to state 74


State 64

   34 Statement: IF . '(' Exp ')' Statement ELSE Statement

    '('  shift, and go to state 75


State 65

   35 Statement: WHILE . '(' Exp ')' Statement

    '('  shift, and go to state 76


State 66

   36 Statement: PRINT . '(' Exp ')' ';'
   37          | PRINT . '(' STRING_LITERAL ')' ';'

    '('  shift, and go to state 77


State 67

   32 Statement: '{' . StatementList '}'
   33          | '{' . '}'

    id     shift, and go to state 63
    IF     shift, and go to state 64
    WHILE  shift, and go to state 65
    PRINT  shift, and go to state 66
    '{'    shift, and go to state 67
    '}'    shift, and go to state 78

    StatementList  go to state 79
    Statement      go to state 80


State 68

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement . '}' '}'

    '}'  shift, and go to state 81


State 69

    7 VarDeclList: VarDeclList . VarDecl
   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList . StatementList RETURN Exp ';' '}'
   19           | PUBLIC Type id '(' FormalList ')' '{' VarDeclList . RETURN Exp ';' '}'

    id       shift, and go to state 82
    RETURN   shift, and go to state 83
    INT      shift, and go to state 21
    BOOLEAN  shift, and go to state 22
    IF       shift, and go to state 64
    WHILE    shift, and go to state 65
    PRINT    shift, and go to state 66
    '{'      shift, and go to state 67

    VarDecl        go to state 23
    VDType         go to state 24
    VDTypePrime    go to state 25
    StatementList  go to state 84
    Statement      go to state 80


State 70

   24 FormalRest: ',' . Type id

    id       shift, and go to state 42
    INT      shift, and go to state 43
    BOOLEAN  shift, and go to state 44

    Type       go to state 85
    PrimeType  go to state 46


State 71

   22 FormalRestList: FormalRestList FormalRest .

    $default  reduce using rule 22 (FormalRestList)


State 72

   40 Index: '[' . Exp ']'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 96
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 73

   38 Statement: id '=' . Exp ';'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 101
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 74

   39 Statement: id Index . '=' Exp ';'
   41 Index: Index . '[' Exp ']'

    '['  shift, and go to state 102
    '='  shift, and go to state 103


State 75

   34 Statement: IF '(' . Exp ')' Statement ELSE Statement

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 104
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 76

   35 Statement: WHILE '(' . Exp ')' Statement

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 105
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 77

   36 Statement: PRINT '(' . Exp ')' ';'
   37          | PRINT '(' . STRING_LITERAL ')' ';'

    id               shift, and go to state 86
    STRING_LITERAL   shift, and go to state 106
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 107
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 78

   33 Statement: '{' '}' .

    $default  reduce using rule 33 (Statement)


State 79

   30 StatementList: StatementList . Statement
   32 Statement: '{' StatementList . '}'

    id     shift, and go to state 63
    IF     shift, and go to state 64
    WHILE  shift, and go to state 65
    PRINT  shift, and go to state 66
    '{'    shift, and go to state 67
    '}'    shift, and go to state 108

    Statement  go to state 109


State 80

   31 StatementList: Statement .

    $default  reduce using rule 31 (StatementList)


State 81

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' . '}'

    '}'  shift, and go to state 110


State 82

   10 VarDecl: id . id ';'
   13 VDType: id . '[' ']'
   38 Statement: id . '=' Exp ';'
   39          | id . Index '=' Exp ';'

    id   shift, and go to state 29
    '['  shift, and go to state 111
    '='  shift, and go to state 73

    Index  go to state 74


State 83

   19 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList RETURN . Exp ';' '}'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 112
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 84

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList StatementList . RETURN Exp ';' '}'
   30 StatementList: StatementList . Statement

    id      shift, and go to state 63
    RETURN  shift, and go to state 113
    IF      shift, and go to state 64
    WHILE   shift, and go to state 65
    PRINT   shift, and go to state 66
    '{'     shift, and go to state 67

    Statement  go to state 109


State 85

   24 FormalRest: ',' Type . id
   26 Type: Type . '[' ']'

    id   shift, and go to state 114
    '['  shift, and go to state 50


State 86

   59 PrimaryExp: id . '.' LENGTH
   60           | id . Index '.' LENGTH
   61           | id . '.' id '(' ExpList ')'
   63 Object: id .

    '['  shift, and go to state 72
    '.'  shift, and go to state 115

    $default  reduce using rule 63 (Object)

    Index  go to state 116


State 87

   54 PrimaryExp: INTEGER_LITERAL .

    $default  reduce using rule 54 (PrimaryExp)


State 88

   55 PrimaryExp: TRUE .

    $default  reduce using rule 55 (PrimaryExp)


State 89

   56 PrimaryExp: FALSE .

    $default  reduce using rule 56 (PrimaryExp)


State 90

   64 Object: THIS .
   67 ObjectPrime: THIS .

    '.'       reduce using rule 67 (ObjectPrime)
    $default  reduce using rule 64 (Object)


State 91

   65 Object: NEW . id '(' ')'
   66       | NEW . PrimeType Index
   68 ObjectPrime: NEW . id '(' ')'
   69            | NEW . PrimeType Index

    id       shift, and go to state 117
    INT      shift, and go to state 43
    BOOLEAN  shift, and go to state 44

    PrimeType  go to state 118


State 92

   58 PrimaryExp: '(' . Exp ')'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 119
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 93

   52 PrefixExp: '+' . PrimaryExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92

    PrimaryExp   go to state 120
    Object       go to state 99
    ObjectPrime  go to state 100


State 94

   51 PrefixExp: '-' . PrimaryExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92

    PrimaryExp   go to state 121
    Object       go to state 99
    ObjectPrime  go to state 100


State 95

   50 PrefixExp: '!' . PrimaryExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92

    PrimaryExp   go to state 122
    Object       go to state 99
    ObjectPrime  go to state 100


State 96

   40 Index: '[' Exp . ']'
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ']'  shift, and go to state 124
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 97

   49 Exp: PrefixExp .

    $default  reduce using rule 49 (Exp)


State 98

   53 PrefixExp: PrimaryExp .

    $default  reduce using rule 53 (PrefixExp)


State 99

   57 PrimaryExp: Object .

    $default  reduce using rule 57 (PrimaryExp)


State 100

   62 PrimaryExp: ObjectPrime . '.' id '(' ExpList ')'

    '.'  shift, and go to state 131


State 101

   38 Statement: id '=' Exp . ';'
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ';'  shift, and go to state 132
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 102

   41 Index: Index '[' . Exp ']'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 133
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 103

   39 Statement: id Index '=' . Exp ';'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 134
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 104

   34 Statement: IF '(' Exp . ')' Statement ELSE Statement
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ')'  shift, and go to state 135
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 105

   35 Statement: WHILE '(' Exp . ')' Statement
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ')'  shift, and go to state 136
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 106

   37 Statement: PRINT '(' STRING_LITERAL . ')' ';'

    ')'  shift, and go to state 137


State 107

   36 Statement: PRINT '(' Exp . ')' ';'
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ')'  shift, and go to state 138
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 108

   32 Statement: '{' StatementList '}' .

    $default  reduce using rule 32 (Statement)


State 109

   30 StatementList: StatementList Statement .

    $default  reduce using rule 30 (StatementList)


State 110

    4 MainClass: CLASS id '{' PUBLIC STATIC VOID MAIN '(' STRING '[' ']' id ')' '{' Statement '}' '}' .

    $default  reduce using rule 4 (MainClass)


State 111

   13 VDType: id '[' . ']'
   40 Index: '[' . Exp ']'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    ']'              shift, and go to state 39
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 96
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 112

   19 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList RETURN Exp . ';' '}'
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ';'  shift, and go to state 139
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 113

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList StatementList RETURN . Exp ';' '}'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 140
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 114

   24 FormalRest: ',' Type id .

    $default  reduce using rule 24 (FormalRest)


State 115

   59 PrimaryExp: id '.' . LENGTH
   61           | id '.' . id '(' ExpList ')'

    id      shift, and go to state 141
    LENGTH  shift, and go to state 142


State 116

   41 Index: Index . '[' Exp ']'
   60 PrimaryExp: id Index . '.' LENGTH

    '['  shift, and go to state 102
    '.'  shift, and go to state 143


State 117

   29 PrimeType: id .
   65 Object: NEW id . '(' ')'
   68 ObjectPrime: NEW id . '(' ')'

    '('  shift, and go to state 144

    $default  reduce using rule 29 (PrimeType)


State 118

   66 Object: NEW PrimeType . Index
   69 ObjectPrime: NEW PrimeType . Index

    '['  shift, and go to state 72

    Index  go to state 145


State 119

   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp
   58 PrimaryExp: '(' Exp . ')'

    op   shift, and go to state 123
    ')'  shift, and go to state 146
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 120

   52 PrefixExp: '+' PrimaryExp .

    $default  reduce using rule 52 (PrefixExp)


State 121

   51 PrefixExp: '-' PrimaryExp .

    $default  reduce using rule 51 (PrefixExp)


State 122

   50 PrefixExp: '!' PrimaryExp .

    $default  reduce using rule 50 (PrefixExp)


State 123

   42 Exp: Exp op . PrefixExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    PrefixExp    go to state 147
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 124

   40 Index: '[' Exp ']' .

    $default  reduce using rule 40 (Index)


State 125

   43 Exp: Exp '<' . PrefixExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    PrefixExp    go to state 148
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 126

   44 Exp: Exp '>' . PrefixExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    PrefixExp    go to state 149
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 127

   45 Exp: Exp '+' . PrefixExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    PrefixExp    go to state 150
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 128

   46 Exp: Exp '-' . PrefixExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    PrefixExp    go to state 151
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 129

   47 Exp: Exp '*' . PrefixExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    PrefixExp    go to state 152
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 130

   48 Exp: Exp '/' . PrefixExp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    PrefixExp    go to state 153
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 131

   62 PrimaryExp: ObjectPrime '.' . id '(' ExpList ')'

    id  shift, and go to state 154


State 132

   38 Statement: id '=' Exp ';' .

    $default  reduce using rule 38 (Statement)


State 133

   41 Index: Index '[' Exp . ']'
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ']'  shift, and go to state 155
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 134

   39 Statement: id Index '=' Exp . ';'
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ';'  shift, and go to state 156
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 135

   34 Statement: IF '(' Exp ')' . Statement ELSE Statement

    id     shift, and go to state 63
    IF     shift, and go to state 64
    WHILE  shift, and go to state 65
    PRINT  shift, and go to state 66
    '{'    shift, and go to state 67

    Statement  go to state 157


State 136

   35 Statement: WHILE '(' Exp ')' . Statement

    id     shift, and go to state 63
    IF     shift, and go to state 64
    WHILE  shift, and go to state 65
    PRINT  shift, and go to state 66
    '{'    shift, and go to state 67

    Statement  go to state 158


State 137

   37 Statement: PRINT '(' STRING_LITERAL ')' . ';'

    ';'  shift, and go to state 159


State 138

   36 Statement: PRINT '(' Exp ')' . ';'

    ';'  shift, and go to state 160


State 139

   19 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList RETURN Exp ';' . '}'

    '}'  shift, and go to state 161


State 140

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList StatementList RETURN Exp . ';' '}'
   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp

    op   shift, and go to state 123
    ';'  shift, and go to state 162
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130


State 141

   61 PrimaryExp: id '.' id . '(' ExpList ')'

    '('  shift, and go to state 163


State 142

   59 PrimaryExp: id '.' LENGTH .

    $default  reduce using rule 59 (PrimaryExp)


State 143

   60 PrimaryExp: id Index '.' . LENGTH

    LENGTH  shift, and go to state 164


State 144

   65 Object: NEW id '(' . ')'
   68 ObjectPrime: NEW id '(' . ')'

    ')'  shift, and go to state 165


State 145

   41 Index: Index . '[' Exp ']'
   66 Object: NEW PrimeType Index .
   69 ObjectPrime: NEW PrimeType Index .

    '['  shift, and go to state 102

    '.'       reduce using rule 69 (ObjectPrime)
    $default  reduce using rule 66 (Object)


State 146

   58 PrimaryExp: '(' Exp ')' .

    $default  reduce using rule 58 (PrimaryExp)


State 147

   42 Exp: Exp op PrefixExp .

    $default  reduce using rule 42 (Exp)


State 148

   43 Exp: Exp '<' PrefixExp .

    $default  reduce using rule 43 (Exp)


State 149

   44 Exp: Exp '>' PrefixExp .

    $default  reduce using rule 44 (Exp)


State 150

   45 Exp: Exp '+' PrefixExp .

    $default  reduce using rule 45 (Exp)


State 151

   46 Exp: Exp '-' PrefixExp .

    $default  reduce using rule 46 (Exp)


State 152

   47 Exp: Exp '*' PrefixExp .

    $default  reduce using rule 47 (Exp)


State 153

   48 Exp: Exp '/' PrefixExp .

    $default  reduce using rule 48 (Exp)


State 154

   62 PrimaryExp: ObjectPrime '.' id . '(' ExpList ')'

    '('  shift, and go to state 166


State 155

   41 Index: Index '[' Exp ']' .

    $default  reduce using rule 41 (Index)


State 156

   39 Statement: id Index '=' Exp ';' .

    $default  reduce using rule 39 (Statement)


State 157

   34 Statement: IF '(' Exp ')' Statement . ELSE Statement

    ELSE  shift, and go to state 167


State 158

   35 Statement: WHILE '(' Exp ')' Statement .

    $default  reduce using rule 35 (Statement)


State 159

   37 Statement: PRINT '(' STRING_LITERAL ')' ';' .

    $default  reduce using rule 37 (Statement)


State 160

   36 Statement: PRINT '(' Exp ')' ';' .

    $default  reduce using rule 36 (Statement)


State 161

   19 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList RETURN Exp ';' '}' .

    $default  reduce using rule 19 (MethodDecl)


State 162

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList StatementList RETURN Exp ';' . '}'

    '}'  shift, and go to state 168


State 163

   61 PrimaryExp: id '.' id '(' . ExpList ')'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 169
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100
    ExpList      go to state 170


State 164

   60 PrimaryExp: id Index '.' LENGTH .

    $default  reduce using rule 60 (PrimaryExp)


State 165

   65 Object: NEW id '(' ')' .
   68 ObjectPrime: NEW id '(' ')' .

    '.'       reduce using rule 68 (ObjectPrime)
    $default  reduce using rule 65 (Object)


State 166

   62 PrimaryExp: ObjectPrime '.' id '(' . ExpList ')'

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 169
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100
    ExpList      go to state 171


State 167

   34 Statement: IF '(' Exp ')' Statement ELSE . Statement

    id     shift, and go to state 63
    IF     shift, and go to state 64
    WHILE  shift, and go to state 65
    PRINT  shift, and go to state 66
    '{'    shift, and go to state 67

    Statement  go to state 172


State 168

   18 MethodDecl: PUBLIC Type id '(' FormalList ')' '{' VarDeclList StatementList RETURN Exp ';' '}' .

    $default  reduce using rule 18 (MethodDecl)


State 169

   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp
   70 ExpList: Exp . ExpRestList

    op   shift, and go to state 123
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 72 (ExpRestList)

    ExpRestList  go to state 173


State 170

   61 PrimaryExp: id '.' id '(' ExpList . ')'

    ')'  shift, and go to state 174


State 171

   62 PrimaryExp: ObjectPrime '.' id '(' ExpList . ')'

    ')'  shift, and go to state 175


State 172

   34 Statement: IF '(' Exp ')' Statement ELSE Statement .

    $default  reduce using rule 34 (Statement)


State 173

   70 ExpList: Exp ExpRestList .
   71 ExpRestList: ExpRestList . ExpRest

    ','  shift, and go to state 176

    $default  reduce using rule 70 (ExpList)

    ExpRest  go to state 177


State 174

   61 PrimaryExp: id '.' id '(' ExpList ')' .

    $default  reduce using rule 61 (PrimaryExp)


State 175

   62 PrimaryExp: ObjectPrime '.' id '(' ExpList ')' .

    $default  reduce using rule 62 (PrimaryExp)


State 176

   73 ExpRest: ',' . Exp

    id               shift, and go to state 86
    INTEGER_LITERAL  shift, and go to state 87
    TRUE             shift, and go to state 88
    FALSE            shift, and go to state 89
    THIS             shift, and go to state 90
    NEW              shift, and go to state 91
    '('              shift, and go to state 92
    '+'              shift, and go to state 93
    '-'              shift, and go to state 94
    '!'              shift, and go to state 95

    Exp          go to state 178
    PrefixExp    go to state 97
    PrimaryExp   go to state 98
    Object       go to state 99
    ObjectPrime  go to state 100


State 177

   71 ExpRestList: ExpRestList ExpRest .

    $default  reduce using rule 71 (ExpRestList)


State 178

   42 Exp: Exp . op PrefixExp
   43    | Exp . '<' PrefixExp
   44    | Exp . '>' PrefixExp
   45    | Exp . '+' PrefixExp
   46    | Exp . '-' PrefixExp
   47    | Exp . '*' PrefixExp
   48    | Exp . '/' PrefixExp
   73 ExpRest: ',' Exp .

    op   shift, and go to state 123
    '<'  shift, and go to state 125
    '>'  shift, and go to state 126
    '+'  shift, and go to state 127
    '-'  shift, and go to state 128
    '*'  shift, and go to state 129
    '/'  shift, and go to state 130

    $default  reduce using rule 73 (ExpRest)
